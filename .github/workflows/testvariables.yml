name: CI-CD-WebApp
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run staging against '
        required: true
        default: ''
        type: choice
        options:
        - main
        - staging

      manualsetdeploy:
        description: 'Set checkBox if need set manual full image name'
        required: true
        # default: ''
        type: boolean
  push:
    branches:
      - 'main'

env:
  dockerfile: 'docker/docker-compose.yml'
  globaltestvarforalljobs: '------globaltestvarforalljobs----------'
  testresetvarforalljobs: '------testresetvarforalljobs----------'  
  globalenv: ${{ github.event.inputs.environment || github.ref_name }}

jobs:
  set-envs:
    outputs:
      SETENV: ${{ steps.usedenv.outputs.SETENV }}
      testvarforalljobs: ${{ steps.usedenv.outputs.testvarforalljobs }}
    runs-on: ubuntu-latest
    steps:
      # SET env depends on branch for commit action
      - name: SHOW used ENV
        id: usedenv
        run: |
          testvarforalljobs="testvarforalljobs111111111111111111"
          echo "testvarforalljobs            == $testvarforalljobs"
          echo "globaltestvarforalljobs      == ${globaltestvarforalljobs}"
          echo "testresetvarforalljobs       == ${testresetvarforalljobs}"
          echo "env.globaltestvarforalljobs  == ${{ env.globaltestvarforalljobs }}"
          testresetvarforalljobs="testresetvarforalljobs22222222222222222222222"
          
          echo "::set-env name=testresetvarforalljobs::$testresetvarforalljobs"
          
          echo "testresetvarforalljobs       ==  $testresetvarforalljobs"
          echo "testvarforalljobs=$testvarforalljobs"                          >> $GITHUB_OUTPUT
          echo "testresetvarforalljobs=$testresetvarforalljobs"                >> $GITHUB_ENV
          

          
#           SETENV=${{ github.event.inputs.environment || '${GITHUB_REF_NAME}' }}
#           echo "SETENV                                   === $SETENV"
#           echo "SETENV=$SETENV"                          >> $GITHUB_OUTPUT
#           mkdir -p ./path/to/artifact/
#           echo "$SETENV"                                 >> ./path/to/artifact/$SETENV
#           echo "SETENV=$SETENV"                          >> $GITHUB_ENV
#           echo "globalenv                    ${globalenv}"
#           echo "var.STATE                    ${{ vars.STATE }}"
# #${{ needs.set-envs.outputs.SETENV }}

  docker-build:
    needs: [ set-envs ]
    if: ${{ github.event.inputs.manualsetdeploy != 'true'  }}
    outputs:
      SETENV: ${{ needs.set-envs.outputs.SETENV }}
    environment: ${{ github.event.inputs.environment || github.ref_name }} #${{ needs.set-envs.outputs.SETENV }}
    runs-on: ubuntu-latest
    steps:
      - name: Show parameters
        id: chowparameters
        run: |
          echo "testvarforalljobs       ==  ${{ github.event.inputs.testvarforalljobs }}"
          echo "testvarforalljobs            == $testvarforalljobs"
          echo "globaltestvarforalljobs      == ${globaltestvarforalljobs}"
          echo "testresetvarforalljobs       == ${testresetvarforalljobs}"
          echo "env.testresetvarforalljobs       == ${{ env.testresetvarforalljobs }}"
          echo "env.globaltestvarforalljobs  == ${{ env.globaltestvarforalljobs }}"
        
          # BUILDNUMBER=$(date +%d.%m.%y_%H.%M)
          # echo "${{ github.event.inputs.environment || '${GITHUB_REF_NAME}' }}"
          # echo "globalenv                    ${globalenv}"
          # echo "var.STATE                    ${{ vars.STATE }}"

  update-webapp:
    if: ${{ always() }}
    needs: [ docker-build ]
    environment:  ${{ github.event.inputs.environment || github.ref_name }}  #${{ needs.set-envs.outputs.SETENV }}
    runs-on: ubuntu-latest
    steps:
      - name: Azure login
        id: azlogin
        run: |
          echo "testvarforalljobs       ==  ${{ github.event.inputs.testvarforalljobs }}"
          echo "testvarforalljobs            == $testvarforalljobs"
          echo "globaltestvarforalljobs      == ${globaltestvarforalljobs}"
          echo "testresetvarforalljobs       == ${testresetvarforalljobs}"
          echo "env.testresetvarforalljobs       == ${{ env.testresetvarforalljobs }}"
          echo "env.globaltestvarforalljobs  == ${{ env.globaltestvarforalljobs }}"


          
          # echo "docker-build.outputs.SETENV     ${{ needs.docker-build.outputs.SETENV }}"
          # echo "set-envs.outputs.SETENV         ${{ needs.set-envs.outputs.SETENV }}"
          # echo "globalenv                    ${globalenv}"
          # echo "env.globalenv                    ${{env.globalenv}}"
          # echo "var.STATE                    ${{ vars.STATE }}"



